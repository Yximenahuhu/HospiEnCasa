// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParqueaderoGrupoB.App.Persistencia;

namespace ParqueaderoGrupoB.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211001235337_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Espacio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroEspacio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("espacios");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Reportes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EspaciosDisponibles")
                        .HasColumnType("int");

                    b.Property<int>("RecervasDisponibles")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("reportes");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EspacioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HoraIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraSalida")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EspacioId");

                    b.ToTable("reservas");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tamaño")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("vehiculos");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.AdministradorSistema", b =>
                {
                    b.HasBaseType("ParqueaderoGrupoB.App.Dominio.Persona");

                    b.Property<int?>("CrearAuxiliarId")
                        .HasColumnType("int");

                    b.Property<int?>("CrearGerenteId")
                        .HasColumnType("int");

                    b.HasIndex("CrearAuxiliarId");

                    b.HasIndex("CrearGerenteId");

                    b.HasDiscriminator().HasValue("AdministradorSistema");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("ParqueaderoGrupoB.App.Dominio.Persona");

                    b.Property<int?>("CrearClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("CrearReservaId")
                        .HasColumnType("int");

                    b.Property<int?>("CrearVehiculoId")
                        .HasColumnType("int");

                    b.HasIndex("CrearClienteId");

                    b.HasIndex("CrearReservaId");

                    b.HasIndex("CrearVehiculoId");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Cliente", b =>
                {
                    b.HasBaseType("ParqueaderoGrupoB.App.Dominio.Persona");

                    b.Property<int>("CantidadVehiculos")
                        .HasColumnType("int");

                    b.Property<int>("TipoVehiculo")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Gerente", b =>
                {
                    b.HasBaseType("ParqueaderoGrupoB.App.Dominio.Persona");

                    b.Property<string>("ConsultarEspacios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConsultarReservas")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Gerente");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Reserva", b =>
                {
                    b.HasOne("ParqueaderoGrupoB.App.Dominio.Espacio", "Espacio")
                        .WithMany()
                        .HasForeignKey("EspacioId");

                    b.Navigation("Espacio");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.AdministradorSistema", b =>
                {
                    b.HasOne("ParqueaderoGrupoB.App.Dominio.Auxiliar", "CrearAuxiliar")
                        .WithMany()
                        .HasForeignKey("CrearAuxiliarId");

                    b.HasOne("ParqueaderoGrupoB.App.Dominio.Gerente", "CrearGerente")
                        .WithMany()
                        .HasForeignKey("CrearGerenteId");

                    b.Navigation("CrearAuxiliar");

                    b.Navigation("CrearGerente");
                });

            modelBuilder.Entity("ParqueaderoGrupoB.App.Dominio.Auxiliar", b =>
                {
                    b.HasOne("ParqueaderoGrupoB.App.Dominio.Cliente", "CrearCliente")
                        .WithMany()
                        .HasForeignKey("CrearClienteId");

                    b.HasOne("ParqueaderoGrupoB.App.Dominio.Reserva", "CrearReserva")
                        .WithMany()
                        .HasForeignKey("CrearReservaId");

                    b.HasOne("ParqueaderoGrupoB.App.Dominio.Vehiculo", "CrearVehiculo")
                        .WithMany()
                        .HasForeignKey("CrearVehiculoId");

                    b.Navigation("CrearCliente");

                    b.Navigation("CrearReserva");

                    b.Navigation("CrearVehiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
